#!/bin/bash

# Retrieve arguments
domain=$1
path=$2
is_public=$3

sudo yunohost app setting bolt is_public -v $is_public

# Check domain/path availability
sudo yunohost app checkurl $domain$path -a bolt
if [[ ! $? -eq 0 ]]; then
    exit 1
fi

# Generate random password
db_pwd=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d '[A-Za-z0-9]' | sed -n 's/\(.\{24\}\).*/\1/p')

# Use 'bolt' as database name and user
db_user=bolt

# Initialize database and store mysql password for upgrade
sudo yunohost app initdb $db_user -p $db_pwd
sudo yunohost app setting bolt mysqlpwd -v $db_pwd

# Copy files to the right place
final_path=/var/www/bolt
sudo mkdir -p $final_path
sudo cp -a ../sources/* $final_path
sudo cp ../conf/config.yml $final_path/app/config/config.yml

# Change variables in bolt configuration
sudo sed -i "s/yunopass/$db_pwd/g" $final_path/app/config/config.yml
sudo chmod +x $final_path/app/nut
sudo chmod -R 777 $final_path/files/ $final_path/app/database/ $final_path/app/cache/ $final_path/app/config/ $final_path/theme/ $final_path/extensions/
sudo sed -i "s@URLWORDPRESS@$domain$path@g" ../conf/*.sql
sudo sed -i "s/I18NTOCHANGE/$language/g" ../conf/*.sql

# Set permissions to bolt directory
sudo chown -R www-data: $final_path

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@PATHTOCHANGE@$path@g" ../conf/nginx.conf*
sed -i "s@ALIASTOCHANGE@$final_path/@g" ../conf/nginx.conf*
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/bolt.conf

# Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
sudo yunohost app setting bolt skipped_uris -v "/"
sudo yunohost app ssowatconf

#user is currently setup by visiting web interface
